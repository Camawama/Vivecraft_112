--- a/net/optifine/entity/model/CustomEntityModels.java
+++ b/net/optifine/entity/model/CustomEntityModels.java
@@ -14,7 +14,9 @@
 import net.minecraft.client.renderer.entity.RenderManager;
 import net.minecraft.client.renderer.tileentity.TileEntityRendererDispatcher;
 import net.minecraft.client.renderer.tileentity.TileEntitySpecialRenderer;
+import net.minecraft.entity.Entity;
 import net.minecraft.src.Config;
+import net.minecraft.tileentity.TileEntity;
 import net.minecraft.util.ResourceLocation;
 import net.optifine.entity.model.anim.ModelResolver;
 import net.optifine.entity.model.anim.ModelUpdater;
@@ -22,13 +24,13 @@
 public class CustomEntityModels
 {
     private static boolean active = false;
-    private static Map<Class, Render> originalEntityRenderMap = null;
-    private static Map<Class, TileEntitySpecialRenderer> originalTileEntityRenderMap = null;
+    private static Map<? extends Class<? extends Entity>, ? extends Render<? extends Entity>> originalEntityRenderMap = null;
+    private static Map<? extends Class<? extends TileEntity>, ? extends TileEntitySpecialRenderer<? extends TileEntity>> originalTileEntityRenderMap = null;
 
     public static void update()
     {
-        Map<Class, Render> map = getEntityRenderMap();
-        Map<Class, TileEntitySpecialRenderer> map1 = getTileEntityRenderMap();
+        Map<Class<? extends Entity>, Render<? extends Entity>> map = getEntityRenderMap();
+        Map<Class<? extends TileEntity>, TileEntitySpecialRenderer<? extends TileEntity>> map1 = getTileEntityRenderMap();
 
         if (map == null)
         {
@@ -83,10 +85,10 @@
         }
     }
 
-    private static Map<Class, Render> getEntityRenderMap()
+    private static Map<Class<? extends Entity>, Render<? extends Entity>> getEntityRenderMap()
     {
         RenderManager rendermanager = Minecraft.getMinecraft().getRenderManager();
-        Map<Class, Render> map = rendermanager.getEntityRenderMap();
+        Map<Class<? extends Entity>, Render<? extends Entity>> map = rendermanager.getEntityRenderMap();
 
         if (map == null)
         {
@@ -96,20 +98,20 @@
         {
             if (originalEntityRenderMap == null)
             {
-                originalEntityRenderMap = new HashMap<Class, Render>(map);
+                originalEntityRenderMap = new HashMap(map);
             }
 
             return map;
         }
     }
 
-    private static Map<Class, TileEntitySpecialRenderer> getTileEntityRenderMap()
+    private static Map<Class<? extends TileEntity>, TileEntitySpecialRenderer<? extends TileEntity>> getTileEntityRenderMap()
     {
-        Map<Class, TileEntitySpecialRenderer> map = TileEntityRendererDispatcher.instance.renderers;
+        Map<Class<? extends TileEntity>, TileEntitySpecialRenderer<? extends TileEntity>> map = TileEntityRendererDispatcher.instance.renderers;
 
         if (originalTileEntityRenderMap == null)
         {
-            originalTileEntityRenderMap = new HashMap<Class, TileEntitySpecialRenderer>(map);
+            originalTileEntityRenderMap = new HashMap(map);
         }
 
         return map;
