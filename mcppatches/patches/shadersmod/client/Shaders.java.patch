--- a/shadersmod/client/Shaders.java
+++ b/shadersmod/client/Shaders.java
@@ -72,6 +72,7 @@
 import net.optifine.entity.model.anim.IExpressionBool;
 import org.apache.commons.io.IOUtils;
 import org.lwjgl.BufferUtils;
+import org.lwjgl.opengl.ARBFragmentShader;
 import org.lwjgl.opengl.ARBGeometryShader4;
 import org.lwjgl.opengl.ARBShaderObjects;
 import org.lwjgl.opengl.ARBVertexShader;
@@ -809,6 +810,7 @@
 
     public static void loadShaderPack()
     {
+    	mc = Minecraft.getMinecraft();
         boolean flag = shaderPackLoaded;
         boolean flag1 = isOldLighting();
         shaderPackLoaded = false;
@@ -1065,7 +1067,7 @@
         Set set = props.keySet();
         List<ICustomTexture> list = new ArrayList<ICustomTexture>();
 
-        for (String s1 : set)
+        for (String s1 : (Set<String>)(Set<?>)set)
         {
             if (s1.startsWith(s))
             {
@@ -1409,7 +1411,7 @@
 
                     if (shaderoption == null)
                     {
-                        list.add((Object)null);
+                        list.add((ShaderOption)null);
                     }
                     else if (shaderoption instanceof ShaderOptionRest)
                     {
@@ -2305,11 +2307,11 @@
 
     private static int getDrawBuffer(int p, String str, int i)
     {
-        int i = 0;
+        int d = 0;
 
         if (i >= str.length())
         {
-            return i;
+            return d;
         }
         else
         {
@@ -2319,23 +2321,23 @@
             {
                 if (j >= 0 && j <= 1)
                 {
-                    i = j + 36064;
+                    d = j + 36064;
                     usedShadowColorBuffers = Math.max(usedShadowColorBuffers, j);
                 }
 
-                return i;
+                return d;
             }
             else
             {
                 if (j >= 0 && j <= 7)
                 {
                     programsToggleColorTextures[p][j] = true;
-                    i = j + 36064;
+                    d = j + 36064;
                     usedColorAttachs = Math.max(usedColorAttachs, j);
                     usedColorBuffers = Math.max(usedColorBuffers, j);
                 }
 
-                return i;
+                return d;
             }
         }
     }
@@ -4161,13 +4163,13 @@
     {
         if (currentWorld != world)
         {
-            World world = currentWorld;
+        	World oldworld = currentWorld;
             currentWorld = world;
             setCameraOffset(mc.getRenderViewEntity());
 
-            if (world != null && world != null)
+            if (world != null && oldworld != null)
             {
-                int i = world.provider.getDimensionType().getId();
+                int i = oldworld.provider.getDimensionType().getId();
                 int j = world.provider.getDimensionType().getId();
                 boolean flag = shaderPackDimensions.contains(Integer.valueOf(i));
                 boolean flag1 = shaderPackDimensions.contains(Integer.valueOf(j));
@@ -5309,8 +5311,6 @@
     public static void setFog(GlStateManager.FogMode fogMode)
     {
         GlStateManager.setFog(fogMode);
-        fogMode = fogMode.capabilityId;
-
         if (fogEnabled)
         {
             setProgramUniform1i(uniform_fogMode, fogMode.capabilityId);
@@ -5491,7 +5491,7 @@
                         Lang.loadLocaleData(inputstream, properties);
                         inputstream.close();
 
-                        for (String s4 : properties.keySet())
+                        for (String s4 : (Set<String>)(Set<?>)properties.keySet())
                         {
                             String s5 = properties.getProperty(s4);
                             shaderPackResources.put(s4, s5);
