--- a/net/minecraft/entity/projectile/EntityArrow.java
+++ b/net/minecraft/entity/projectile/EntityArrow.java
@@ -2,11 +2,15 @@
 
 import com.google.common.base.Predicate;
 import com.google.common.base.Predicates;
+import com.mtbs3d.minecrift.api.NetworkHelper;
+import com.mtbs3d.minecrift.api.VivePlayer;
+
 import java.util.List;
 import javax.annotation.Nullable;
 import net.minecraft.block.Block;
 import net.minecraft.block.material.Material;
 import net.minecraft.block.state.IBlockState;
+import net.minecraft.client.Minecraft;
 import net.minecraft.enchantment.EnchantmentHelper;
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.EntityLivingBase;
@@ -92,6 +96,15 @@
 
         if (shooter instanceof EntityPlayer)
         {
+        	VivePlayer vp = NetworkHelper.vivePlayers.get(shooter.getUniqueID());
+        	if (vp !=null)
+        	{
+        		//VIVE SET SPAWNPOS - Aim is handled by LookOverride.
+    	        Vec3d aimSource = vp.getControllerPos(1);
+        		this.setPosition(aimSource.x ,aimSource.y ,aimSource.z );
+        		///
+        	}
+            
             this.pickupStatus = EntityArrow.PickupStatus.ALLOWED;
         }
     }
@@ -122,6 +135,18 @@
         float f = -MathHelper.sin(yaw * 0.017453292F) * MathHelper.cos(pitch * 0.017453292F);
         float f1 = -MathHelper.sin(pitch * 0.017453292F);
         float f2 = MathHelper.cos(yaw * 0.017453292F) * MathHelper.cos(pitch * 0.017453292F);
+        
+        //VIVE SET VELOCITY
+        if(shooter.getEntityId() == Minecraft.getMinecraft().player.getEntityId()){
+        	VivePlayer vp = NetworkHelper.vivePlayers.get(shooter.getUniqueID());
+        	if (vp !=null && !vp.isSeated())
+        	{        		
+        		velocity = velocity * vp.getDraw();  
+        		this.damage *= 2;
+        	}
+        }
+        ///
+
         this.shoot((double)f, (double)f1, (double)f2, velocity, inaccuracy);
         this.motionX += shooter.motionX;
         this.motionZ += shooter.motionZ;
