--- a/net/minecraft/client/renderer/entity/RenderPlayer.java
+++ b/net/minecraft/client/renderer/entity/RenderPlayer.java
@@ -1,5 +1,9 @@
 package net.minecraft.client.renderer.entity;
 
+import java.sql.Ref;
+import java.util.UUID;
+
+import com.mtbs3d.minecrift.render.PlayerModelController;
 import net.minecraft.client.entity.AbstractClientPlayer;
 import net.minecraft.client.model.ModelBiped;
 import net.minecraft.client.model.ModelPlayer;
@@ -18,6 +22,8 @@
 import net.minecraft.scoreboard.Score;
 import net.minecraft.scoreboard.ScoreObjective;
 import net.minecraft.scoreboard.Scoreboard;
+import net.minecraft.src.Reflector;
+import net.minecraft.src.ReflectorConstructor;
 import net.minecraft.util.EnumHandSide;
 import net.minecraft.util.ResourceLocation;
 import net.minecraft.util.math.MathHelper;
@@ -57,6 +63,13 @@
      */
     public void doRender(AbstractClientPlayer entity, double x, double y, double z, float entityYaw, float partialTicks)
     {
+    	//Forge
+    	if(Reflector.forgeExists()){
+    		if(Reflector.postForgeBusEvent(Reflector.RenderPlayerEvent_Pre_Constructor, new Object[]{entity, this, partialTicks, x, y, z}))
+    			return;
+    	}
+    	//
+    	
         if (!entity.isUser() || this.renderManager.renderViewEntity == entity)
         {
             double d0 = y;
@@ -71,9 +84,15 @@
             super.doRender(entity, x, d0, z, entityYaw, partialTicks);
             GlStateManager.disableBlendProfile(GlStateManager.Profile.PLAYER_SKIN);
         }
+        
+        //Forge
+    	if(Reflector.forgeExists()){
+    		Reflector.postForgeBusEvent(Reflector.RenderPlayerEvent_Post_Constructor, new Object[]{entity, this, partialTicks, x, y, z});
+    	}
+    	//
     }
 
-    private void setModelVisibilities(AbstractClientPlayer clientPlayer)
+    protected void setModelVisibilities(AbstractClientPlayer clientPlayer)
     {
         ModelPlayer modelplayer = this.getMainModel();
 
@@ -95,6 +114,11 @@
             modelplayer.bipedLeftArmwear.showModel = clientPlayer.isWearing(EnumPlayerModelParts.LEFT_SLEEVE);
             modelplayer.bipedRightArmwear.showModel = clientPlayer.isWearing(EnumPlayerModelParts.RIGHT_SLEEVE);
             modelplayer.isSneak = clientPlayer.isSneaking();
+
+            UUID uuid=clientPlayer.getGameProfile().getId();
+            modelplayer.isVrPlayer= PlayerModelController.getInstance().isTracked(uuid);
+            modelplayer.playerUuid=uuid;
+
             ModelBiped.ArmPose modelbiped$armpose = ModelBiped.ArmPose.EMPTY;
             ModelBiped.ArmPose modelbiped$armpose1 = ModelBiped.ArmPose.EMPTY;
 
@@ -129,6 +153,12 @@
                     {
                         modelbiped$armpose1 = ModelBiped.ArmPose.BLOCK;
                     }
+                    // FORGE: fix MC-88356 allow offhand to use bow and arrow animation
+                    else if (enumaction1 == EnumAction.BOW)
+                    {
+                        modelbiped$armpose1 = ModelBiped.ArmPose.BOW_AND_ARROW;
+                    }
+                    //
                 }
             }
 
@@ -193,6 +223,11 @@
         ModelPlayer modelplayer = this.getMainModel();
         this.setModelVisibilities(clientPlayer);
         GlStateManager.enableBlend();
+
+        UUID uuid=clientPlayer.getGameProfile().getId();
+        modelplayer.isVrPlayer= PlayerModelController.getInstance().isTracked(uuid);
+        modelplayer.playerUuid=uuid;
+
         modelplayer.swingProgress = 0.0F;
         modelplayer.isSneak = false;
         modelplayer.setRotationAngles(0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0625F, clientPlayer);
@@ -211,6 +246,11 @@
         ModelPlayer modelplayer = this.getMainModel();
         this.setModelVisibilities(clientPlayer);
         GlStateManager.enableBlend();
+
+        UUID uuid=clientPlayer.getGameProfile().getId();
+        modelplayer.isVrPlayer= PlayerModelController.getInstance().isTracked(uuid);
+        modelplayer.playerUuid=uuid;
+
         modelplayer.isSneak = false;
         modelplayer.swingProgress = 0.0F;
         modelplayer.setRotationAngles(0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0625F, clientPlayer);
