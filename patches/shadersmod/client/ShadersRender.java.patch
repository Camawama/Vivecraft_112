--- a/shadersmod/client/ShadersRender.java
+++ b/shadersmod/client/ShadersRender.java
@@ -156,7 +156,7 @@
         }
 
         GlStateManager.depthFunc(515);
-        GL11.glColor4f(1.0F, 1.0F, 1.0F, 1.0F);
+        GlStateManager.color(1.0F, 1.0F, 1.0F, 1.0F);
         itemRenderer.renderItemInFirstPerson(par1);
         Shaders.setRenderingFirstPersonHand(false);
     }
@@ -203,7 +203,7 @@
             RenderGlobal renderglobal = minecraft.renderGlobal;
             Shaders.isShadowPass = true;
             Shaders.shadowPassCounter = Shaders.shadowPassInterval;
-            Shaders.preShadowPassThirdPersonView = minecraft.gameSettings.thirdPersonView;
+            Shaders.preShadowPassThirdPersonView = 0;// minecraft.gameSettings.thirdPersonView;
             minecraft.gameSettings.thirdPersonView = 1;
             Shaders.checkGLError("pre shadow");
             GL11.glMatrixMode(GL11.GL_PROJECTION);
@@ -215,7 +215,8 @@
             Shaders.checkGLError("shadow bind sfb");
             Shaders.useProgram(30);
             minecraft.mcProfiler.endStartSection("shadow camera");
-            entityRenderer.setupCameraTransform(partialTicks, 2);
+          entityRenderer.setupCameraTransform(partialTicks, 2);    
+          entityRenderer.applyCameraDepth(false);
             Shaders.setCameraShadow(partialTicks);
             ActiveRenderInfo.updateRenderInfo(minecraft.player, minecraft.gameSettings.thirdPersonView == 2);
             Shaders.checkGLError("shadow camera");
@@ -231,7 +232,7 @@
             }
 
             Shaders.checkFramebufferStatus("shadow fb");
-            GL11.glClearColor(1.0F, 1.0F, 1.0F, 1.0F);
+            GlStateManager.clearColor(1.0F, 1.0F, 1.0F, 1.0F);
             GL11.glClear(Shaders.usedShadowColorBuffers != 0 ? GL11.GL_COLOR_BUFFER_BIT | GL11.GL_DEPTH_BUFFER_BIT : GL11.GL_DEPTH_BUFFER_BIT);
             Shaders.checkGLError("shadow clear");
             minecraft.mcProfiler.endStartSection("shadow frustum");
@@ -263,7 +264,9 @@
             GlStateManager.disableAlpha();
             renderglobal.renderBlockLayer(BlockRenderLayer.SOLID, (double)partialTicks, 2, entity);
             Shaders.checkGLError("shadow terrain solid");
+            GL11.glEnable(GL11.GL_ALPHA_TEST);
             GlStateManager.enableAlpha();
+            GlStateManager.alphaFunc(516, 0.1F);
             renderglobal.renderBlockLayer(BlockRenderLayer.CUTOUT_MIPPED, (double)partialTicks, 2, entity);
             Shaders.checkGLError("shadow terrain cutoutmipped");
             minecraft.getTextureManager().getTexture(TextureMap.LOCATION_BLOCKS_TEXTURE).setBlurMipmap(false, false);
@@ -394,7 +397,10 @@
             GL11.glPopMatrix();
             GL11.glMatrixMode(GL11.GL_MODELVIEW);
             Shaders.checkGLError("shadow end");
+        } else{
+        	int a = 9;
         }
+        	
     }
 
     public static void preRenderChunkLayer(BlockRenderLayer blockLayerIn)
@@ -407,7 +413,7 @@
         if (OpenGlHelper.useVbo())
         {
             GL11.glEnableClientState(GL11.GL_NORMAL_ARRAY);
-            GL20.glEnableVertexAttribArray(Shaders.midTexCoordAttrib);
+            GL20.glEnableVertexAttribArray(Shaders.midTexAttrib);
             GL20.glEnableVertexAttribArray(Shaders.tangentAttrib);
             GL20.glEnableVertexAttribArray(Shaders.entityAttrib);
         }
@@ -418,7 +424,7 @@
         if (OpenGlHelper.useVbo())
         {
             GL11.glDisableClientState(GL11.GL_NORMAL_ARRAY);
-            GL20.glDisableVertexAttribArray(Shaders.midTexCoordAttrib);
+            GL20.glDisableVertexAttribArray(Shaders.midTexAttrib);
             GL20.glDisableVertexAttribArray(Shaders.tangentAttrib);
             GL20.glDisableVertexAttribArray(Shaders.entityAttrib);
         }
@@ -439,7 +445,7 @@
         GL11.glTexCoordPointer(2, GL11.GL_SHORT, 56, 24L);
         OpenGlHelper.setClientActiveTexture(OpenGlHelper.defaultTexUnit);
         GL11.glNormalPointer(GL11.GL_BYTE, 56, 28L);
-        GL20.glVertexAttribPointer(Shaders.midTexCoordAttrib, 2, GL11.GL_FLOAT, false, 56, 32L);
+        GL20.glVertexAttribPointer(Shaders.midTexAttrib, 2, GL11.GL_FLOAT, false, 56, 32L);
         GL20.glVertexAttribPointer(Shaders.tangentAttrib, 4, GL11.GL_SHORT, false, 56, 40L);
         GL20.glVertexAttribPointer(Shaders.entityAttrib, 3, GL11.GL_SHORT, false, 56, 48L);
     }
@@ -566,3 +572,4 @@
         }
     }
 }
+
